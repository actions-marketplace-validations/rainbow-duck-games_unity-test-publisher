name: "units-test"
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2020.2.1f1
  PROJECT_PATH: .
  
jobs:
  # unit tests
  units:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: npm ci
    - run: npm test
      
  checklicense:
    name: Check Unity License
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        run: |
          echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
          echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"
  activation:
    needs: [checklicense]
    if: needs.checklicense.outputs.is_unity_license_set == 'false'
    name: Request Activation
    runs-on: ubuntu-latest
    steps:
      # Request manual activation file
      - name: Request manual activation file
        id: getManualLicenseFile
        uses: webbertakken/unity-request-manual-activation-file@main
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Upload activation file
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  # run unity tests & analyze result
  test:
    name: run tests & analyze
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - unity-project
    steps:
      - uses: actions/checkout@v2
      - uses: rainbow-duck-games/unity-test-runner@main
        id: testRunner
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          customImage: erlioniel/unity-editor-lite:2020.2.1f1-base-0
          testMode: playmode
          customParameters: "-nographics"
      - uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report: ${{ steps.testRunner.outputs.artifactsPath }}
